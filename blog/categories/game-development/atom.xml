<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Game Development | Ellison Leão]]></title>
  <link href="http://ellisonleao.github.com/blog/categories/game-development/atom.xml" rel="self"/>
  <link href="http://ellisonleao.github.com/"/>
  <updated>2014-02-11T13:43:57-02:00</updated>
  <id>http://ellisonleao.github.com/</id>
  <author>
    <name><![CDATA[Ellison Leão]]></name>
    <email><![CDATA[ellisonleao@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Debug all the Components of a Unity3D GameObject]]></title>
    <link href="http://ellisonleao.github.com/blog/2013/debug-all-the-components-of-a-unity3d-gameobject/"/>
    <updated>2013-05-08T00:34:00-03:00</updated>
    <id>http://ellisonleao.github.com/blog/2013/debug-all-the-components-of-a-unity3d-gameobject</id>
    <content type="html"><![CDATA[<p>Hello people! This is a quick post about how can you get all the
Components of a Unity GameObject. Sometimes you need to call a
function inside a script that belongs to another GameObject. Getting
this script component is one of the ways of doing it. Let’s see the code</p>

<pre><code>Component[] components = YOURGAMEOBJECT.GetComponents&lt;Component&gt;();
foreach (Component component in components){
	Debug.Log("@@@@" + YOURGAMEOBJECT.name + "\t["+c.name+"]" + 
			  "\t"+ c.GetType() +"\t"+c.GetType().BaseType);

}
</code></pre>

<p>And that’s it. Call this code inside a script and see all the components
in the Debug console. Hope it helps! See you next post!</p>
]]></content>
  </entry>
  
</feed>
